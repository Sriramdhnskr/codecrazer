#include<elf.h>
#include<stdio.h>
#include<string.h>
#include<dirent.h>
char *f[];
long int sizes[];
long int findSize(char file_name[]) 
{ 
	FILE* fp = fopen(file_name,"r"); 
	if (fp == NULL) { 
		printf("File is not found \n"); 
		return -1;   
	}  
	fseek(fp, 0L, SEEK_END);
	long int res = ftell(fp);//size of file 
	fclose(fp); 
	return res;
} 
void read_elf_header(const char* elfFile) {
	Elf64_Ehdr header;
	DIR *d;
	int i = 0;
	struct dirent *dir;
	d = opendir(".");
	if (d)
    {
		while ((dir = readdir(d)) != NULL)
        {       
			FILE* file = fopen(dir->d_name, "rb");   
			if(file) {
				fread(&header, 1, sizeof(header), file);
				// check if an elf file
				if (memcmp(header.e_ident,ELFMAG,SELFMAG) == 0) {
					strcpy(f[i], dir->d_name);      
					i++;       
				}     
			}   	
		}   
		fclose(file); 
	}
	for(int i=0, j=0; i<sizeof(f); i++){
		long int res = findSize(f[i]); 
		if (res != -1) {
			sizes[j] = res;   
			j++;   
		} 
	}
	char temp[];
	for (i=0;i<len(sizes);i++)  
	{
		for (j=i+1;j<n;j++)
        {     
			if (sizes[i] > sizes[j]) 
            {
				a=number[i];
				strcpy(temp, f[i]);
				number[i] = number[j];
				strcpy(f[i],f[j]);        
				number[j] = a;
				strcpy(f[j], temp);     
			}   
		} 
	}
	for(int i=0;i<sizeof(f);i++){
		printf("%p\n",f[i]); 
	}
}
